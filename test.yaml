kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubesphere-router-kube-system
  namespace: kube-system
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: kubesphere-router-kube-system-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 1.1.0
    helm.sh/chart: ingress-nginx-4.0.13
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubesphere.io/relatedHPA: kubesphere-router-kube-system
    meta.helm.sh/release-name: kubesphere-router-kube-system-ingress
    meta.helm.sh/release-namespace: dcop-minio-v5
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: kubesphere-router-kube-system-ingress
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: kubesphere-router-kube-system-ingress
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
        - name: controller
          image: 'reposc.cloud.pay/kubesphere/nginx-ingress-controller:v1.1.0'
          args:
            - /nginx-ingress-controller
            - >-
              --election-id=ingress-controller-leader-kubesphere-router-kube-system
            - '--controller-class=k8s.io/ingress-nginx'
            - '--configmap=$(POD_NAMESPACE)/kubesphere-router-kube-system'
            - '--watch-namespace=kube-system'
            - '--watch-ingress-without-class=true'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 10254
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          resources:
            limits:
              cpu: 800m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 90Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsUser: 101
            allowPrivilegeEscalation: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 300
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kubesphere-router-kube-system
      serviceAccount: kubesphere-router-kube-system
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - kubesphere-router-kube-system-ingress
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - controller
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

